{"ast":null,"code":"export const removeStopWords = str => {\n  const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now'];\n  res = [];\n  words = str.split(' ');\n\n  for (i = 0; i < words.length; i++) {\n    if (!stopwords.includes(words[i])) {\n      res.push(words[i]);\n    }\n  }\n\n  return res.join(' ');\n};\nexport const splitInParas = str => {\n  let paras = [];\n\n  for (var i = 0; i < str.length; i++) {\n    let tempPara = \"\";\n\n    if (i == str.length - 1) {\n      paras.push(tempPara);\n    } else if (str[i] == \"\\n\" && str[i + 1] == \"\\n\") {\n      paras.push(tempPara);\n    } else {\n      tempPara.push(str[i]);\n    }\n  }\n\n  return paras;\n};\nexport const invertIndexing = paras => {\n  res = {};\n\n  for (var i = 0; i < paras.length; i++) {\n    const words = paras[i].split(' ').filter(function (item, i, allItems) {\n      return i == allItems.indexOf(item);\n    });\n\n    for (var j = 0; j < words.length; j++) {\n      if (res[words[j]] === undefined) {\n        res[words[j]] = [i];\n      } else {\n        res[words[j]].push(i);\n      }\n    }\n  }\n\n  return res;\n};","map":{"version":3,"sources":["/home/arpit/Documents/tapchief-assingement/src/utils/textProcesser.js"],"names":["removeStopWords","str","stopwords","res","words","split","i","length","includes","push","join","splitInParas","paras","tempPara","invertIndexing","filter","item","allItems","indexOf","j","undefined"],"mappings":"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","sourcesContent":["export const removeStopWords = (str)=>{\n  const stopwords = ['i','me','my','myself','we','our','ours','ourselves','you','your','yours','yourself','yourselves','he','him','his','himself','she','her','hers','herself','it','its','itself','they','them','their','theirs','themselves','what','which','who','whom','this','that','these','those','am','is','are','was','were','be','been','being','have','has','had','having','do','does','did','doing','a','an','the','and','but','if','or','because','as','until','while','of','at','by','for','with','about','against','between','into','through','during','before','after','above','below','to','from','up','down','in','out','on','off','over','under','again','further','then','once','here','there','when','where','why','how','all','any','both','each','few','more','most','other','some','such','no','nor','not','only','own','same','so','than','too','very','s','t','can','will','just','don','should','now']\n  res = []\n  words = str.split(' ')\n  for(i=0;i<words.length;i++) {\n      if(!stopwords.includes(words[i])) {\n          res.push(words[i])\n      }\n  }\n  return(res.join(' '))\n}\n\nexport const splitInParas = (str)=>{\n  let paras = []\n  for(var i = 0; i < str.length; i++){\n    let tempPara = \"\"\n    if(i == str.length - 1){\n      paras.push(tempPara)\n    }else if(str[i] == \"\\n\" && str[i+1] == \"\\n\"){\n      paras.push(tempPara)\n    }else{\n      tempPara.push(str[i])\n    }\n  }\n  return paras\n}\n\nexport const invertIndexing = (paras)=>{\n  res = {}\n  for(var i = 0;i < paras.length; i++){\n    const words = paras[i].split(' ').filter(function(item,i,allItems){\n      return i==allItems.indexOf(item);\n  })\n    for(var j = 0;j < words.length; j++){\n      if(res[words[j]] === undefined){\n        res[words[j]] = [i]\n      }else{\n        res[words[j]].push(i)\n      }\n    }\n  }\n  return res\n} "]},"metadata":{},"sourceType":"module"}