{"ast":null,"code":"import _defineProperty from \"/home/arpit/Documents/minor1/emotional-detector/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/arpit/Documents/minor1/emotional-detector/src/components/formsContainers/SignupFormContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Button from \"./../UI/Button/Button\";\nimport styles from \"./SignupFormContainer.module.css\";\nimport axios from \"axios\";\nimport Input from \"./../UI/Input/Input\";\n\nclass SignupFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        name: {\n          elementType: \"input\",\n          inputType: \"text\",\n          placeholder: \"Your Name\",\n          value: \"\",\n          validationRules: {\n            required: true\n          },\n          valid: false,\n          //whether value is false or correct\n          touched: false\n        },\n        enrollNo: {\n          elementType: \"input\",\n          inputType: \"number\",\n          placeholder: \"Your Enroll No\",\n          valid: \"false\",\n          validationRules: {\n            required: true,\n            isNumber: true\n          }\n        },\n        email: {\n          elementType: \"input\",\n          inputType: \"email\",\n          placeholder: \"Your Email\",\n          value: \" \",\n          valid: false,\n          validationRules: {\n            required: true,\n            isEmail: true\n          }\n        },\n        password: {\n          elementType: \"input\",\n          inputType: \"password\",\n          placeholder: \"Password\",\n          value: \"\",\n          valid: false,\n          validationRules: {\n            required: true,\n            isPassword: true\n          }\n        }\n      },\n      formIsValid: false,\n      //this property can be used to check whether we can submit the form or not\n      loading: false\n    };\n  }\n\n  inputChangedHandler(event, inputIdentifier) {\n    //make an instance fo the form\n    const updatedForm = _objectSpread({}, this.state.orderForm); //get the element of yhe form which needs to be updated \n\n\n    const updateFormElement = updatedForm[inputIdentifier]; //set the new value\n  }\n\n  render() {\n    const form = Object.keys(this.state.form).map(inputField => React.createElement(Input, {\n      elementType: this.state.form[inputField].elementType,\n      inputType: this.state.form[inputField].inputType,\n      placeholder: this.state.form[inputField].placeholder,\n      value: this.state.form[inputField].value,\n      valid: this.state.form[inputField].valid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n    return React.createElement(\"form\", {\n      onSubmit: this.signupHandler,\n      className: styles.SignupFormContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, form, React.createElement(Button, {\n      classes: [\"Submit\"],\n      disabled: !this.state.formIsValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default SignupFormContainer;","map":{"version":3,"sources":["/home/arpit/Documents/minor1/emotional-detector/src/components/formsContainers/SignupFormContainer.js"],"names":["React","Component","Button","styles","axios","Input","SignupFormContainer","constructor","props","state","form","name","elementType","inputType","placeholder","value","validationRules","required","valid","touched","enrollNo","isNumber","email","isEmail","password","isPassword","formIsValid","loading","inputChangedHandler","event","inputIdentifier","updatedForm","orderForm","updateFormElement","render","Object","keys","map","inputField","signupHandler"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Button from \"./../UI/Button/Button\";\nimport styles from \"./SignupFormContainer.module.css\";\nimport axios from \"axios\";\nimport Input from \"./../UI/Input/Input\";\n\nclass SignupFormContainer extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      form:{\n        name: {\n          elementType: \"input\",\n          inputType: \"text\",\n          placeholder: \"Your Name\",\n          value: \"\",\n          validationRules:{\n            required: true\n          },\n          valid: false,//whether value is false or correct\n          touched: false\n        },\n        enrollNo:{\n          elementType: \"input\",\n          inputType: \"number\",\n          placeholder: \"Your Enroll No\",\n          valid: \"false\",\n          validationRules:{\n            required: true,\n            isNumber: true\n          }\n        },\n        email:{\n          elementType: \"input\",\n          inputType: \"email\",\n          placeholder: \"Your Email\",\n          value:\" \",\n          valid: false,\n          validationRules:{\n            required: true,\n            isEmail: true\n          }\n        },\n        password:{\n          elementType: \"input\",\n          inputType: \"password\",\n          placeholder: \"Password\",\n          value: \"\",\n          valid: false,\n          validationRules:{\n            required: true,\n            isPassword: true\n          }\n        }\n      },\n      formIsValid: false,//this property can be used to check whether we can submit the form or not\n      loading: false\n    }\n  }\n\n  inputChangedHandler(event, inputIdentifier){\n    //make an instance fo the form\n    const updatedForm = {\n      ...this.state.orderForm\n    }\n    //get the element of yhe form which needs to be updated \n    const updateFormElement = updatedForm[inputIdentifier]\n\n    //set the new value\n    \n\n\n  }\n\n  render(){\n    const form = Object.keys(this.state.form).map(inputField => (\n      <Input elementType = {this.state.form[inputField].elementType}\n      inputType = {this.state.form[inputField].inputType}\n      placeholder = {this.state.form[inputField].placeholder}\n      value = {this.state.form[inputField].value}\n      valid = {this.state.form[inputField].valid}/>\n    ))\n    return(\n      <form onSubmit = {this.signupHandler} className = {styles.SignupFormContainer}>\n        {form}\n        <Button classes = {[\"Submit\"]} disabled = {!this.state.formIsValid}>Submit</Button>\n      </form>\n    )\n  }\n}\n\nexport default SignupFormContainer;"]},"metadata":{},"sourceType":"module"}